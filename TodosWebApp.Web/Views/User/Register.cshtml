@{
    Layout = "_UserLayout";
}

@model UserViewModel
<div class="d-flex container align-items-center justify-content-center mt-5">
  <div class="col-md-4">
    <div class="row">
      <div class="card">
        <div class="card-body my-3">
          <a href="/User/Login" class="link-primary link-offset-2 link-underline-opacity-25 link-underline-opacity-100-hover">
            <h5>Back</h5>
          </a>
          <h2 class="card-title mb-4 text-center">
            Register
            <hr class="my-4">
          </h2>
          <form id="form" asp-controller="User" asp-action="Register" method="POST">
            <div class="form-group mb-3">
              <label for="FirstName" class="form-label">First Name</label>
              <input type="text" class="form-control mb-2" placeholder="Enter First Name" asp-for="FirstName" required data-parsley-trigger="change">
            </div>
            <div class="form-group mb-3">
              <label for="LastName" class="form-label">Last Name</label>
              <input type="text" class="form-control mb-2" placeholder="Enter Last Name" asp-for="LastName" required data-parsley-trigger="change">
            </div>
            <div class="form-group mb-3">
              <label for="Username" class="form-label">Username</label>
              <input type="text" class="form-control mb-2" placeholder="Enter Username" asp-for="Username" required data-parsley-trigger="change">
            </div>
            <div class="form-group mb-3">
              <label for="Email" class="form-label">Email</label>
              <input type="email" class="form-control mb-2" placeholder="Enter Email" asp-for="Email" required data-parsley-trigger="change">
            </div>
            <div class="form-group mb-3">
              <label for="Password" class="form-label">Password </label>
              <input type="password" class="form-control mb-2" placeholder="Enter Password" asp-for="Password" required data-parsley-trigger="change" placeholder="Password" required data-parsley-minlength="5" required data-parsley-maxlength="40" pattern="^(?=.*[A-Z])(?=.*\d)(?=.*[\W_]).+$">
            </div>
            <div class="form-group mb-3">
              <label for="ConfirmPassword" class="form-label">Confirm Password</label>
              <input type="password" class="form-control mb-2" placeholder="Enter Confirm Password" asp-for="ConfirmPassword" required data-parsley-trigger="change" placeholder="Password" required data-parsley-minlength="5" required data-parsley-maxlength="40" pattern="^(?=.*[A-Z])(?=.*\d)(?=.*[\W_]).+$">
            </div>
            <div class="col">
              <button type="submit" class="btn btn-primary btn-lg w-100">Register</button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</div>

@section Scripts {
<script>
  $(document).ready(() => { 
    var isUsername = false;
    var isEmail = false;

    $("#form").parsley().on("form:submit", () => {
      return $("#Password").val() == $("#ConfirmPassword").val() && !isUsername && !isEmail;
    });

    $("#ConfirmPassword").parsley().on("field:validated", () => {
      var ok = $("#Password").val() == $("#ConfirmPassword").val();
      $("#ConfirmPassword").toggleClass("parsley-error", !ok);
      $("ul[id='parsley-id-15']").addClass("filled");

      if($("ul[id='parsley-id-15']").length == 0) {
        $("[data-parsley-id='15']").parent().append("<ul id='parsley-id-15' class='parsley-errors-list filled' aria-hidden='false'></ul>");
      }

      if($("#Password").val() != $("#ConfirmPassword").val() && $("ul[id='parsley-id-15'] li").length == 0) {
        $("ul[id='parsley-id-15']").append("<li class='parsley-required'>Passwords do not match</li>");
      } else if ($("#Password").val() == $("#ConfirmPassword").val() && $("ul[id='parsley-id-15'] li").length == 1) {
        $("ul[id='parsley-id-15']").remove();
      }
    });

    $("#Username").parsley().on("field:validated", (e) => {
      var xhr = checkUser("username");
      xhr.then((data)=>{
        $("#Username").toggleClass("parsley-error", data["isUsername"]);

        if($("ul[id='parsley-id-9'] li.parsley-error").length == 0 && $("#Username").val() != "" && data["isUsername"]) {
          $("#Username").parsley().addError("error", {message: "Username already exists"});
          isUsername = true;
        } else if (data["isUsername"] == false) {
          $("#Username").parsley().removeError("error");
          isUsername = false;
        }
      });
    });

    $("#Email").parsley().on("field:validated", (e) => {
      var xhr = checkUser("email");
      xhr.then((data)=>{
        $("#Email").toggleClass("parsley-error", data["isEmail"]);

        if($("ul[id='parsley-id-11'] li.parsley-error").length == 0 && $("#Email").val() != "" && data["isEmail"]) {
          $("#Email").parsley().addError("error", {message: "Email already exists"});
          isEmail = true;
        } else if (data["isEmail"] == false) {
          $("#Email").parsley().removeError("error");
          isEmail = false;
        }
      });
    });
    
  function checkUser(user) { 
        return $.ajax({
        type: "POST",
        url: `/User/CheckUser/${user}`,
        data: {
          username: $("#Username").val(),
          email: $("#Email").val(),
        },
      });
    }
  });
</script>
}